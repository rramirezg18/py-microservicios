server {
  listen 80;
  server_name _;

  # Servir el build del frontend
  root /usr/share/nginx/html;
  index index.html;

  # --------------------------------------------------------------------
  # Normalización interna de rutas mal formadas: /api/api/... -> /api/...
  # --------------------------------------------------------------------
  # Esta location SOLO reescribe y vuelve a evaluar el enrutamiento.
  location ~ ^/api/(?:api/)+ {
    rewrite ^/api/(?:api/)+(.*)$ /api/$1 last;  # "last" = relanza matching de locations
  }

  # --------------------------------------------------------------------
  # AUTH: /api/auth/... -> auth-service:8080
  # --------------------------------------------------------------------
  location ^~ /api/auth/ {
    proxy_pass http://auth-service:8080;
    proxy_http_version 1.1;

    proxy_set_header Authorization $http_authorization;
    proxy_set_header Host              $host;
    proxy_set_header X-Real-IP         $remote_addr;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    proxy_read_timeout 600s;
    proxy_send_timeout 600s;
    proxy_request_buffering off;
  }

  # Callback OAuth (si lo usas)
  location = /signin-github {
    proxy_pass http://auth-service:8080/signin-github;
    proxy_http_version 1.1;

    proxy_set_header Host              $host;
    proxy_set_header X-Real-IP         $remote_addr;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    proxy_read_timeout 600s;
    proxy_send_timeout 600s;
  }

  # --------------------------------------------------------------------
  # TOURNAMENTS: /api/tournaments/... -> tournament-service:8082
  # Alias en español: /api/torneos/...
  # --------------------------------------------------------------------
  location ^~ /api/tournaments/ {
    proxy_pass http://tournament-service:8082;
    proxy_http_version 1.1;

    proxy_set_header Authorization $http_authorization;
    proxy_set_header Host              $host;
    proxy_set_header X-Real-IP         $remote_addr;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    proxy_read_timeout 600s;
    proxy_send_timeout 600s;
    proxy_request_buffering off;
  }

  location ^~ /api/torneos/ {
    proxy_pass http://tournament-service:8082;
    proxy_http_version 1.1;

    proxy_set_header Authorization $http_authorization;
    proxy_set_header Host              $host;
    proxy_set_header X-Real-IP         $remote_addr;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    proxy_read_timeout 600s;
    proxy_send_timeout 600s;
    proxy_request_buffering off;
  }

  # --------------------------------------------------------------------
  # Fallback de API: cualquier otro /api/... va a auth-service
  # (NO usamos ^~ aquí para permitir que la regex de normalización funcione)
  # --------------------------------------------------------------------
  location /api/ {
    proxy_pass http://auth-service:8080;
    proxy_http_version 1.1;

    proxy_set_header Authorization $http_authorization;
    proxy_set_header Host              $host;
    proxy_set_header X-Real-IP         $remote_addr;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    proxy_read_timeout 600s;
    proxy_send_timeout 600s;
    proxy_request_buffering off;
  }

  # --------------------------------------------------------------------
  # SPA fallback
  # --------------------------------------------------------------------
  location / {
    try_files $uri $uri/ /index.html;
  }

  client_max_body_size 10m;
}
