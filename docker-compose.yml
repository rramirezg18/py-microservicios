# Compose v2 ya no necesita "version"
services:
  auth-sql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: auth-sql
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Guate!2025Siman
    ports:
      - "1433:1433"
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P $$SA_PASSWORD -C -Q \"SELECT 1\" || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s
    restart: unless-stopped

  auth-service:
    build:
      context: ./auth-service
    container_name: auth-service
    environment:
      - ASPNETCORE_URLS=http://+:8080
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Server=auth-sql,1433;Database=AuthDb;User Id=sa;Password=Guate!2025Siman;Encrypt=False;TrustServerCertificate=True;
      # Rellena si vas a usar GitHub OAuth
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID:-}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET:-}
    depends_on:
      auth-sql:
        condition: service_healthy
    ports:
      - "8080:8080"
    restart: unless-stopped

  tournament-service:
    # Asumiendo que ya pusiste el Dockerfile en ./tournament-service
    build:
      context: ./tournament-service
    container_name: tournament-service
    environment:
      - PORT=8082   # si tu servicio usa otro puerto interno, cámbialo AQUÍ y en nginx.conf
    ports:
      - "8082:8082"
    restart: unless-stopped
    # Si tu tournament-service necesita DB, aquí agregas sus variables y depends_on

  frontend:
    build:
      context: ./frontend
    container_name: frontend
    depends_on:
      - auth-service
      - tournament-service
    ports:
      - "8081:80"
    restart: unless-stopped
